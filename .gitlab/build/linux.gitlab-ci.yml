all linux:
    stage: build
    image: debian:10

    extends: .production

    variables:
        BUILD_TYPE: Release
        RELEASE_TYPE: PRODUCTION
        STABLE_BUILD: 1

        RELEASE_NUMBER: $CI_COMMIT_TAG

        TIVOLI_QT_BASE: $CI_PROJECT_DIR/build/TIVOLI_QT
        TIVOLI_VCPKG_BASE: $CI_PROJECT_DIR/build/TIVOLI_VCPKG

        # CMAKE_BACKTRACE_URL: https://o320671.ingest.sentry.io/api/5265062/minidump/?sentry_key=e4f9d26e25d94299b04d94bedcbf4633
        # SENTRY_AUTH_TOKEN
        # SENTRY_ORG: tivolicloud

    cache:
        paths:
            - build/TIVOLI_QT
            - build/TIVOLI_VCPKG

    script:
        # arch linux
        # - pacman -Syu --noconfirm base-devel git curl unzip gcc cmake python python-distutils-extra nodejs openssl double-conversion libpng harfbuzz mesa alsa-lib libxmu libxi freeglut jack libxrandr libudev0-shim zlib md4c

        # debian 10 (buster)
        - export SERVER_DEPS="build-essential gcc g++ git curl unzip python3 libssl-dev libdouble-conversion-dev libpng-dev libharfbuzz-dev libgl1-mesa-dev libasound2 libxmu-dev libxi-dev freeglut3-dev libasound2-dev libjack0 libjack-dev libxrandr-dev libudev-dev zlib1g-dev libpcre2-dev"
        - export INTERFACE_DEPS="libpulse0 libnss3 libnspr4 libfontconfig1 libxcursor1 libxcomposite1 libxtst6 libxslt1.1 libjpeg-dev libpulse-mainloop-glib0 libxss-dev libpci-dev libevent-dev libminizip-dev"
        - export INTERFACE_APPDIR_DEPS="wget libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-render-util0-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-x11-dev libegl1-mesa-dev libgstreamer-plugins-base1.0-dev libgtk-3-dev libmtdev-dev libinput-dev libxcb-xinput-dev"

        - apt-get update -y
        - apt-get install -y $SERVER_DEPS $INTERFACE_DEPS $INTERFACE_APPDIR_DEPS

        - curl -O https://cmake.org/files/v3.14/cmake-3.14.2-Linux-x86_64.sh
        - chmod +x cmake-3.14.2-Linux-x86_64.sh
        - ./cmake-3.14.2-Linux-x86_64.sh --prefix=/usr/local --skip-license
        - curl -sL https://deb.nodesource.com/setup_12.x | bash -
        - apt-get install -y nodejs
        # - npm i -g @sentry/cli

        # build
        - mkdir -p build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        - make interface domain-server assignment-client oven ice-server -j$(nproc)

        # upload symbols and sources to sentry
        # - sentry-cli upload-dif --include-sources -p interface interface

        # save shared libraries for server
        # TODO: switch to AppDir format
        - cp ../docker/extract-so.py ./extract-so-server.py
        - python3 extract-so-server.py

        # make interface AppDir
        - cd interface

        - wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        - chmod +x linuxdeployqt-continuous-x86_64.AppImage
        - ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract

        - mkdir -p interface.AppDir/usr/bin
        - cp interface interface.AppDir/usr/bin
        - cp resources.rcc interface.AppDir/usr/bin
        - cp -r jsdoc interface.AppDir/usr/bin
        - cp -r plugins interface.AppDir/usr/bin
        - cp -r resources interface.AppDir/usr/bin
        - cp -r scripts interface.AppDir/usr/bin
        - mkdir -p interface.AppDir/usr/lib
        - cp ../libraries/gl/libgl.so interface.AppDir/usr/lib
        # libgl is a terrible name and causes problems
        # TODO: shared libraries should be something like libTivoliGl.so

        # TODO: Qt version shouldn't be manually specified
        # TODO: plugins shouldn't be manually specified
        # TODO: ...write a python script to create AppDirs with linuxdeployqt
        - export LD_LIBRARY_PATH=$CI_PROJECT_DIR/build
        - ./squashfs-root/AppRun interface.AppDir/usr/bin/interface
          -unsupported-allow-new-glibc
          -executable=interface.AppDir/usr/bin/plugins/libhifiCodec.so
          -executable=interface.AppDir/usr/bin/plugins/libhifiSdl2.so
          -executable=interface.AppDir/usr/bin/plugins/libpcmCodec.so
          -executable=interface.AppDir/usr/bin/plugins/libsteamClient.so
          -executable=interface.AppDir/usr/lib/libgl.so
          -qmake=$TIVOLI_QT_BASE/5.15/qt5-install/bin/qmake
          -qmldir=$TIVOLI_QT_BASE/5.15/qt5-install/qml
          -qmldir=../../interface/resources/qml
          -extra-plugins=webview,platformthemes/libqgtk3.so
          -exclude-libs=libnss3.so,libnssutil3.so
          -no-translations -no-copy-copyright-files -bundle-non-qt-libs

        - cd interface.AppDir
        - ln -s usr/bin/interface interface

    artifacts:
        expire_in: 1 day
        paths:
            - build/domain-server/domain-server
            - build/domain-server/resources
            - build/domain-server/lib
            - build/assignment-client/assignment-client
            - build/tools/oven/oven

            - build/ice-server/ice-server
            - build/ice-server/lib

            - build/interface/interface.AppDir

launcher linux:
    stage: package
    image: archlinux:latest

    extends: .production

    dependencies:
        - all linux

    script:
        # deps
        - pacman -Syu --noconfirm git nodejs-lts-erbium npm yarn python binutils

        - rm -rf launcher # just incase
        - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@git.tivolicloud.com/tivolicloud-private/launcher
        - mkdir -p launcher/interface
        - mv build/interface/interface.AppDir launcher/interface # interface.AppDir is a folder

        # TODO: this needs changing
        - cd launcher/.gitlab
        - yarn install
        - node prepare.js # needs CI_COMMIT_TAG
        - cd ..

        - yarn install
        - yarn build
        - yarn package

        # TODO: publish to aur possibly

    artifacts:
        expire_in: 1 day
        paths:
            - launcher/dist/*.AppImage
            - launcher/dist/*.pacman
            - launcher/dist/*.deb
            - launcher/dist/*.yml
