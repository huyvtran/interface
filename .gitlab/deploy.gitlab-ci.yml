# this file deploy to production
# please be careful not to run this by accident!

.deploy:
    extends: .production
    when: manual
    allow_failure: false

# sentry release:
#     stage: deploy
#     image: getsentry/sentry-cli

#     extends: .deploy
#     variables:
#         # SENTRY_AUTH_TOKEN
#         SENTRY_ORG: tivolicloud

#     script:
#         - sentry-cli releases new -p interface $CI_COMMIT_TAG
#         - sentry-cli releases set-commits --auto $CI_COMMIT_TAG

pages:
    stage: deploy
    image: node:latest

    extends: .deploy

    script:
        - cd tools/jsdoc
        - npm install
        - npm run build
        - mv out ../../public

    artifacts:
        paths:
            - public

upload server:
    stage: deploy
    image: docker:latest

    extends: .deploy

    dependencies:
        - all linux

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker system info
        - docker image ls
        - cd docker

        # server
        - cd server
        - mkdir -p dist

        - mv ../../build/server.AppDir dist
        - cp ecosystem.config.js dist

        - docker build -t $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64 .
        - docker image ls
        - cd ..

        # ice server
        - cd ice-server
        - mkdir -p dist

        - mv ../../build/ice-server.AppDir dist

        - docker build -t $CI_REGISTRY_IMAGE/ice-server:latest .
        - docker image ls
        - cd ..

        # publish server and ice server to our registry
        - docker login registry.tivolicloud.com --username gitlab-ci-token --password $CI_JOB_TOKEN
        - docker push $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64
        - docker push $CI_REGISTRY_IMAGE/ice-server:latest

upload server arm64:
    stage: deploy
    image: docker:latest
    tags:
        - arm64

    extends: .deploy

    dependencies:
        - server linux arm64

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker system info
        - docker image ls
        - cd docker

        # server
        - cd server
        - mkdir -p dist

        - mv ../../build/server.AppDir dist
        - cp ecosystem.config.js dist

        - docker build -t $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64 .
        - docker image ls
        - cd ..

        # publish server to our registry
        - docker login registry.tivolicloud.com --username gitlab-ci-token --password $CI_JOB_TOKEN
        - docker push $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64

upload launcher:
    stage: deploy
    image: google/cloud-sdk:alpine

    extends: .deploy

    dependencies:
        - launcher windows
        - launcher macos
        - launcher linux

    script:
        - gcloud auth activate-service-account --key-file $GCP_AUTH_JSON

        - cd launcher/dist
        - gsutil cp
          *.exe
          *.dmg *.zip
          *.AppImage *.deb *.pacman
          *.yml *.blockmap
          gs://tivolicloud-cdn/releases

        - gcloud compute url-maps invalidate-cdn-cache tivolicloud-cdn
          --path "/releases/*"
